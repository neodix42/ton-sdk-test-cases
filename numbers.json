{
  "testCases": {
    "numbers-1": {
      "description": "Check big number comparison",
      "input": {
        "inputNumberA": "2",
        "powerOfNumberA": "336",
        "inputNumberB": "2",
        "powerOfNumberB": "316"
      },
      "expectedOutput": {
        "AequalsB": false
      }
    },
    "numbers-2": {
      "description": "Check toncoin sum and rounding to 2 decimals HALF_UP",
      "input": {
        "toncoinsA": "0.2022511",
        "toncoinsB": "0.1522514128",
        "toncoinsC": "7.846944"
      },
      "expectedOutput": {
        "sumDecimals2": "8.20"
      }
    },
    "numbers-3": {
      "description": "Check toNano() or similar. No rounding, truncate >9 decimals",
      "input": {
        "toncoinsValueA": "55452.84035143599999",
        "toncoinsValueB": "0.11333333333333333333"
      },
      "expectedOutput": {
        "nanoValueA": "55452840351435",
        "nanoValueB": "113333333"
      }
    },
    "numbers-4": {
      "description": "Check parsing fromNano() or similar",
      "input": {
        "nanoValue": "542545452543214354"
      },
      "expectedOutput": {
        "toncoins": "542545452.543214354"
      }
    },
    "numbers-5": {
      "description": "Check toNano() overflow",
      "input": {
        "toncoinsValue": "87131189765554911355541123898551252.156449"
      },
      "expectedOutput": {
        "error": "raise error"
      }
    },
    "numbers-6": {
      "description": "Check fromNano() overflow",
      "input": {
        "nanoValue": "87897655549113552455125241594812234476"
      },
      "expectedOutput": {
        "error": "raise error"
      }
    },
    "numbers-7": {
      "description": "Check fromNano() near max value overflow, 2^120",
      "input": {
        "base": "2",
        "pow": "120"
      },
      "expectedOutput": {
        "error": "raise error"
      }
    },
    "numbers-8": {
      "description": "Check fromNano() max value, 2^120-1",
      "input": {
        "base": "2",
        "pow": "120",
        "minus": "1"
      },
      "expectedOutput": {
        "base": "2",
        "pow": "120",
        "minus": "1"
      }
    }
  }
}